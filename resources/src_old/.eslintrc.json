{
    "root": true,
    "env": {
        "browser": true,
        "es2021": true,
        "node": true
    },
    "extends": [
        "plugin:react/recommended",
        "airbnb",
        "prettier",
        "plugin:react-hooks/recommended",
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:jsx-a11y/recommended"
    ],
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 12,
        "sourceType": "module"
    },
    "plugins": ["react", "import"],
    "rules": {
        //*****************************************************************
        // !no need for prop-types validation since we're using typescript
        "react/prop-types": "off",
        //*****************************************************************
        "import/extensions": "off",
        "no-plusplus": "off",
        "import/no-unresolved": "error",
        "quotes": ["error", "double"],
        "linebreak-style": ["error", "windows"],
        "react/jsx-filename-extension": [1, { "extensions": [".js", ".tsx"] }],
        "react/jsx-one-expression-per-line": [0],
        "camelcase": ["error", { "allow": ["^UNSAFE_"] }],
        "react-hooks/exhaustive-deps": "warn",
        "import/no-extraneous-dependencies": [
            "error",
            { "devDependencies": true }
        ],
        //**************************************************************************
        // !note you must disable the base rule as it can report incorrect errors
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": ["error"],
        //**************************************************************************
        // !note you must disable the base rule as it can report incorrect errors
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": ["error"]
        //**************************************************************************
    },
    "overrides": [
        {
            // enable the rule specifically for TypeScript files
            "files": ["*.ts", "*.tsx"],
            "rules": {
                "@typescript-eslint/explicit-function-return-type": ["error"]
            }
        }
    ],
    "settings": {
        "import/parsers": {
            "@typescript-eslint/parser": [".ts", ".tsx"]
        },
        "import/resolver": {
            "typescript": {
                "alwaysTryTypes": true, // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`

                // Choose from one of the "project" configs below or omit to use <root>/tsconfig.json by default

                // use a glob pattern
                "project": "*/tsconfig.json"
            }
        }
    }
}
